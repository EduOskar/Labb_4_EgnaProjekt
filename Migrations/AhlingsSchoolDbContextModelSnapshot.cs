// <auto-generated />
using System;
using Labb_4_EgnaProjekt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_4_EgnaProjekt.Migrations
{
    [DbContext(typeof(AhlingsSchoolDbContext))]
    partial class AhlingsSchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("FkEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("FK_EmployeeId");

                    b.Property<int?>("FkGradingTable")
                        .HasColumnType("int")
                        .HasColumnName("FK_GradingTable");

                    b.HasKey("ClassId");

                    b.HasIndex("FkEmployeeId");

                    b.HasIndex("FkGradingTable");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int>("FkClassId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ClassId");

                    b.Property<int?>("FkPersonIdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("FK_PersonIdEmployee");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("FkPersonIdEmployee");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.GradingTable", b =>
                {
                    b.Property<int>("GradingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradingId"), 1L, 1);

                    b.Property<int>("FkClassId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ClassId");

                    b.Property<int>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("FK_StudentId");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("GradeSet")
                        .HasColumnType("date");

                    b.HasKey("GradingId");

                    b.HasIndex("FkClassId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("gradingTables", (string)null);
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.PersonalInformation", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<DateTime>("Birthdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("('0001-01-01T00:00:00.0000000')");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LName");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssnumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("SSNumber");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("PersonId");

                    b.ToTable("personalInformations", (string)null);
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"), 1L, 1);

                    b.Property<int>("FkClassId")
                        .HasColumnType("int")
                        .HasColumnName("FK_ClassId");

                    b.Property<string>("FkClassName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("FK_ClassName");

                    b.Property<int>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("FK_StudentId");

                    b.HasKey("SchoolId");

                    b.HasIndex("FkClassId");

                    b.HasIndex("FkStudentId");

                    b.ToTable("schools", (string)null);
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<int?>("FkClassId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("FK_ClassId");

                    b.Property<int?>("FkPersonIdStudent")
                        .HasColumnType("int")
                        .HasColumnName("FK_PersonIdStudent");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("StudentId");

                    b.HasIndex("FkClassId");

                    b.HasIndex("FkPersonIdStudent");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Class", b =>
                {
                    b.HasOne("Labb_4_EgnaProjekt.Models.Employee", "FkEmployee")
                        .WithMany("Classes")
                        .HasForeignKey("FkEmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Classes_Employees");

                    b.HasOne("Labb_4_EgnaProjekt.Models.GradingTable", "FkGradingTableNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("FkGradingTable")
                        .HasConstraintName("FK_Classes_gradingTables");

                    b.Navigation("FkEmployee");

                    b.Navigation("FkGradingTableNavigation");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Employee", b =>
                {
                    b.HasOne("Labb_4_EgnaProjekt.Models.PersonalInformation", "FkPersonIdEmployeeNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("FkPersonIdEmployee")
                        .HasConstraintName("FK_Employees_personalInformations");

                    b.Navigation("FkPersonIdEmployeeNavigation");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.GradingTable", b =>
                {
                    b.HasOne("Labb_4_EgnaProjekt.Models.Class", "FkClass")
                        .WithMany("GradingTables")
                        .HasForeignKey("FkClassId")
                        .IsRequired()
                        .HasConstraintName("FK_gradingTables_Classes");

                    b.HasOne("Labb_4_EgnaProjekt.Models.Student", "FkStudent")
                        .WithMany("GradingTables")
                        .HasForeignKey("FkStudentId")
                        .IsRequired()
                        .HasConstraintName("FK_gradingTables_Students");

                    b.Navigation("FkClass");

                    b.Navigation("FkStudent");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.School", b =>
                {
                    b.HasOne("Labb_4_EgnaProjekt.Models.Class", "FkClass")
                        .WithMany("Schools")
                        .HasForeignKey("FkClassId")
                        .IsRequired()
                        .HasConstraintName("FK_schools_Classes");

                    b.HasOne("Labb_4_EgnaProjekt.Models.Student", "FkStudent")
                        .WithMany("Schools")
                        .HasForeignKey("FkStudentId")
                        .IsRequired()
                        .HasConstraintName("FK_schools_Students");

                    b.Navigation("FkClass");

                    b.Navigation("FkStudent");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Student", b =>
                {
                    b.HasOne("Labb_4_EgnaProjekt.Models.Class", "FkClass")
                        .WithMany("Students")
                        .HasForeignKey("FkClassId")
                        .IsRequired()
                        .HasConstraintName("FK_Students_Classes");

                    b.HasOne("Labb_4_EgnaProjekt.Models.PersonalInformation", "FkPersonIdStudentNavigation")
                        .WithMany("Students")
                        .HasForeignKey("FkPersonIdStudent")
                        .HasConstraintName("FK_Students_personalInformations1");

                    b.Navigation("FkClass");

                    b.Navigation("FkPersonIdStudentNavigation");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Class", b =>
                {
                    b.Navigation("GradingTables");

                    b.Navigation("Schools");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Employee", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.GradingTable", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.PersonalInformation", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Labb_4_EgnaProjekt.Models.Student", b =>
                {
                    b.Navigation("GradingTables");

                    b.Navigation("Schools");
                });
#pragma warning restore 612, 618
        }
    }
}
